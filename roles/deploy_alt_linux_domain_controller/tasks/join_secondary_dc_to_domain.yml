---
- name: Check DNS record {{ ansible_host }}
  ansible.builtin.command: host -t A {{ inventory_hostname }}
  delegate_to: "{{ daldc_ip_primary_dc }}"
  ignore_errors: true
  register: daldc_result_check_dns

- name: Add DNS record {{ ansible_host }} to {{ daldc_domain_name | upper }}
  ansible.builtin.command: >
    samba-tool dns add {{ daldc_ip_primary_dc }} {{ daldc_domain_name }}
    {{ inventory_hostname }} A {{ ansible_host }}
    --username={{ daldc_admin_AD_username }} --password={{ daldc_admin_AD_pass }}
  delegate_to: "{{ daldc_ip_primary_dc }}"
  no_log: true
  when: daldc_result_check_dns.rc != 0

# - name: Set /etc/krb5.conf
#   ansible.builtin.template:
#     src: templates/krb5.conf.j2
#     dest: /etc/krb5.conf
#     owner: root
#     group: root
#     mode: 0644

# - name: kinit
#   args:
#     executable: /usr/bin/expect
#   ansible.builtin.shell: |
#     spawn kinit {{ daldc_admin_AD_username }}@{{ daldc_domain_name | upper }}
#     expect -exact "Password for {{ daldc_admin_AD_username }}@{{ daldc_domain_name | upper }}:"
#     send -- "{{ daldc_admin_AD_pass }}\n"
#     expect eof
#   no_log: true

# - name: klist
#   ansible.builtin.command: klist
#   register: daldc_result_klist_ticket

# При авторизации через тикет Kerberos вылетает ошибка
#
# - name: Join {{ inventory_hostname }} to domain {{ daldc_domain_name | upper }}
#   ansible.builtin.command: >
#     samba-tool domain join {{ daldc_domain_name | lower }} DC
#       --username={{ daldc_admin_AD_username }}
#       --use-kerberos=required
#       --use-krb5-ccache={{ daldc_result_klist_ticket.stdout_lines[0].split(' ')[2] }}
#       --realm={{ daldc_domain_name | lower }}
#       --dns-backend=BIND9_DLZ
#       --option="ad dc functional level = {{ daldc_domain_function_level }}"
#       --option='idmap_ldb:use rfc2307 = yes'
#   no_log: true

- name: Join {{ inventory_hostname }} to domain {{ daldc_domain_name | upper }}
  ansible.builtin.command: >
    samba-tool domain join {{ daldc_domain_name | lower }} DC
      --username={{ daldc_admin_AD_username }}
      --password={{ daldc_admin_AD_pass }}
      --realm={{ daldc_domain_name | lower }}
      --dns-backend=BIND9_DLZ
      --option="ad dc functional level = {{ daldc_domain_function_level }}"
      --option='idmap_ldb:use rfc2307 = yes'
  no_log: true

- name: Set /etc/net/ifaces/{{ daldc_net_ifaces }}/resolv.conf
  ansible.builtin.lineinfile:
    path: "/etc/net/ifaces/{{ daldc_net_ifaces }}/resolv.conf"
    regexp: '^nameserver {{ daldc_ip_primary_dc }}'
    line: nameserver {{ ansible_host }}
  register: daldc_result_set_resolv

- name: Restart NetworkManager
  ansible.builtin.service:
    name: NetworkManager
    state: restarted
  when: daldc_result_set_resolv.changed == true

- name: Update DNS
  ansible.builtin.command: resolvconf -u
  when: daldc_result_set_resolv.changed == true

- name: Configure replication
  import_tasks: configure_replication.yml
