---
- name: Check DNS record {{ ansible_host }}
  ansible.builtin.command: host -t A {{ inventory_hostname }}
  delegate_to: "{{ dald_ip_primary_dc }}"
  ignore_errors: true
  register: dald_result_check_dns

- name: Add DNS record {{ ansible_host }} to {{ dald_domain_name | upper }}
  ansible.builtin.command: >
    samba-tool dns add {{ dald_ip_primary_dc }} {{ dald_domain_name }}
    {{ inventory_hostname }} A {{ ansible_host }}
    --username={{ dald_admin_AD_username }} --password={{ dald_admin_AD_pass }}
  delegate_to: "{{ dald_ip_primary_dc }}"
  no_log: true
  when: dald_result_check_dns.rc != 0

- name: Set /etc/krb5.conf
  ansible.builtin.template:
    src: templates/krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
    mode: 0644

- name: kinit
  args:
    executable: /usr/bin/expect
  ansible.builtin.shell: |
    spawn kinit {{ dald_admin_AD_username }}@{{ dald_domain_name | upper }}
    expect -exact "Password for {{ dald_admin_AD_username }}@{{ dald_domain_name | upper }}:"
    send -- "{{ dald_admin_AD_pass }}\n"
    expect eof
  no_log: true

- name: klist
  ansible.builtin.command: klist
  register: dald_result_klist_ticket

# При авторизации через тикет Kerberos вылетает ошибка
#
# - name: Join {{ inventory_hostname }} to domain {{ dald_domain_name | upper }}
#   ansible.builtin.command: >
#     samba-tool domain join {{ dald_domain_name | lower }} DC
#       --username={{ dald_admin_AD_username }}
#       --use-kerberos=required
#       --use-krb5-ccache={{ dald_result_klist_ticket.stdout_lines[0].split(' ')[2] }}
#       --realm={{ dald_domain_name | lower }}
#       --dns-backend=BIND9_DLZ
#       --option="ad dc functional level = {{ dald_domain_function_level }}"
#       --option='idmap_ldb:use rfc2307 = yes'
#   no_log: true

- name: Join {{ inventory_hostname }} to domain {{ dald_domain_name | upper }}
  ansible.builtin.command: >
    samba-tool domain join {{ dald_domain_name | lower }} DC
      --username={{ dald_admin_AD_username }}
      --password={{ dald_admin_AD_pass }}
      --realm={{ dald_domain_name | lower }}
      --dns-backend=BIND9_DLZ
      --option="ad dc functional level = {{ dald_domain_function_level }}"
      --option='idmap_ldb:use rfc2307 = yes'
  no_log: true

- name: Set /etc/net/ifaces/{{ dald_net_ifaces }}/resolv.conf
  ansible.builtin.lineinfile:
    path: "/etc/net/ifaces/{{ dald_net_ifaces }}/resolv.conf"
    regexp: '^nameserver {{ dald_ip_primary_dc }}'
    line: nameserver {{ ansible_host }}
  register: dald_result_set_resolv

- name: Restart NetworkManager
  ansible.builtin.service:
    name: NetworkManager
    state: restarted
  when: dald_result_set_resolv.changed == true

- name: Update DNS
  ansible.builtin.command: resolvconf -u
  when: dald_result_set_resolv.changed == true
